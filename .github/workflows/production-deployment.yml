name: Production Deployment
concurrency: 'production'

on:
  push:
    branches: master

jobs:
  deploy-build:
    runs-on: ubuntu-latest
    environment: PRODUCTION
    steps:
      - uses: actions/checkout@v2

      - name: 'State Check'
        run: |
          echo
          echo === GIT STATUS
          git status --verbose --branch --long
          echo
          echo === GIT BRANCH
          git branch -vv --all
          echo
          echo === GIT LOG
          git log -5 --source
          echo
          echo === GITHUB_WORKFLOW: The action name
          echo ${{ github.workflow }}
          echo
          echo === GITHUB_ACTOR: Ran by username
          echo ${{ github.actor }}
          echo
          echo === GITHUB_REPOSITORY
          echo ${{ github.repository }}
          echo
          echo === GITHUB_EVENT_NAME
          echo  ${{ github.event_name }}
          echo
          echo === GITHUB_SHA
          echo ${{ github.sha }}
          echo
          echo === GITHUB_REF
          echo ${{ github.ref }}
          echo
          echo === GITHUB_REF_NAME
          echo ${{ github.ref_name }}
          echo
          echo === GITHUB_REF_TYPE: branch or tag
          echo ${{ github.ref_type }}
          echo
          echo === GITHUB_HEAD_REF: Source of the change
          echo ${{ github.head_ref }}
          echo
          echo === GITHUB_BASE_REF: Target of the change
          echo ${{ github.base_ref }}

      - name: 'Install SFDX CLI'
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install

      - name: 'Decrypt Server Key'
        run: openssl enc -nosalt -aes-256-cbc -d -in build/server.key.enc -out server.key -base64 -K ${{ secrets.DECRYPTION_KEY }} -iv ${{ secrets.DECRYPTION_IV }}

      - name: 'Authorize User in Org'
        run: sfdx force:auth:jwt:grant --clientid=${{ secrets.ORG_CONSUMER_KEY }} --username=${{ secrets.ORG_USERNAME }} --jwtkeyfile server.key --instanceurl=${{ secrets.ORG_INSTANCE_URL }} --setdefaultusername --setalias=target-org

      - name: 'Org List'
        run: sfdx force:org:list --all --verbose

      - name: 'Convert DX to Metadata'
        run: sfdx force:source:convert --rootdir=force-app --outputdir=src

      - name: 'Package XML Output'
        run: cat src/package.xml

      - name: 'Parse and Store Unit Tests to Run'
        run: |
          echo "SFDC_UNIT_TESTS=$( tr '\n' ',' < build/unit-tests.txt )" >> $GITHUB_ENV

      - name: 'Deploy in Org'
        run: sfdx force:mdapi:deploy --verbose --wait=-1 --deploydir=src --targetusername=target-org --testlevel=RunSpecifiedTests --runtests=${{ env.SFDC_UNIT_TESTS }}
