name: Custom Check

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Commit hash from branch'
        required: true
        default: 'custom-check'

jobs:
  build-info:
    name: Build Info
    if: always()
    runs-on: ubuntu-latest
    steps:
      #- name: Generate Annotations
      #  uses: ./.github/actions/build-info

      - name: Get Pull Requests
        uses: octokit/request-action@v2.1.0
        id: get-pull-requests
        with:
          route: GET /repos/${{ github.repository }}/pulls
          accept: application/vnd.github.v3+json
          state: open
          head: ${{ github.repository_owner }}:${{ github.event.inputs.branch }}
          base: develop
          sort: created
          direction: desc
          per_page: 100
          page: 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse Response
        id: parse-response
        run: echo "::set-output name=value::$( echo '${{ steps.get-pull-requests.outputs.data }}' | jq -c '.[]? | [ ''"PR ''", .number, ''" ''", .html_url ] | join(''"''")' )"

      - name: Create Annotation
        run: |
          echo "::notice title=Build Info - Workflow::${{ github.server_url }}/${{ github.repository }}/actions/workflows/${{ github.action }}.yml"
          echo "::notice title=Build Info - Validating Branch::${{ github.event.inputs.branch }}"
          echo "::notice title=Build Info - Pull Request::PR #${{ fromJson(steps.get-pull-requests.outputs.data)[0].number }} ${{ fromJson(steps.get-pull-requests.outputs.data)[0].html_url }}"
          echo '${{ steps.get-pull-requests.outputs.data }}' | jq -c '.[]? | [ "PR #", .number, " ", .html_url ] | join("")'
          for row in '${{ steps.get-pull-requests.outputs.data }}' | jq -c '.[]? | [ "PR #", .number, " ", .html_url ] | join("")'; do
            echo '::notice title=Build Info - Pull Request xx::${row}'
          done

  create-check-run:
    if: always()
    runs-on: ubuntu-latest
    outputs:
      data: ${{ steps.create-check-run.outputs.data }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          ref: ${{ github.event.inputs.branch }}

      - name: Get Latest Commit Hash
        id: latest-commit-hash
        #uses: ./.github/actions/get-latest-commit-hash
        run: echo "::set-output name=commit-hash::$( git log -1 --format='%H' )"

      - name: Create Check Run
        uses: octokit/request-action@v2.1.0
        id: create-check-run
        with:
          route: POST /repos/${{ github.repository }}/check-runs
          name: ${{ github.workflow }}
          head_sha: ${{ steps.latest-commit-hash.outputs.commit-hash }}
          status: in_progress
          details_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  validate-build:
    runs-on: ubuntu-latest
    steps:
      - name: Whats up
        run: echo "Hello World!"
      - name: Try to fail
        run: exit 1
      - name: Print if not fail
        run: echo should not get here


#git --no-pager diff --diff-filter=ACMRTUXB remotes/origin/develop HEAD

  update-success-check-run:
    if: success()
    needs: [create-check-run, validate-build]
    runs-on: ubuntu-latest
    steps:
      - name: Update Check Run as Success
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/${{ github.repository }}/check-runs/${{ fromJson(needs.create-check-run.outputs.data).id }}
          check_run_id: ${{ fromJson(needs.create-check-run.outputs.data).id }}
          status: completed
          conclusion: success
          output: |
            title: Success
            summary: The validation build was successful. See the [build summary](/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-failure-check-run:
    if: failure()
    needs: [create-check-run, validate-build]
    runs-on: ubuntu-latest
    steps:
      - name: Update Check Run as Failure
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/${{ github.repository }}/check-runs/${{ fromJson(needs.create-check-run.outputs.data).id }}
          check_run_id: ${{ fromJson(needs.create-check-run.outputs.data).id }}
          status: completed
          conclusion: failure
          output: |
            title: Failure
            summary: The validation build has failed. See the [build summary](/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-cancelled-check-run:
    if: cancelled()
    needs: [create-check-run, validate-build]
    runs-on: ubuntu-latest
    steps:
      - name: Update Check Run as Cancelled
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/${{ github.repository }}/check-runs/${{ fromJson(needs.create-check-run.outputs.data).id }}
          check_run_id: ${{ fromJson(needs.create-check-run.outputs.data).id }}
          status: completed
          conclusion: cancelled
          output: |
            title: Cancelled
            summary: The validation build has been cancelled. See the [build summary](/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
